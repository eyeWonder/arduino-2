int theRandom; //this variable has global scope because it is not defined in a fuction it's value is available everywhere

void setup() {//first of two required fuctions, this is done once on setup
  Serial.begin( 9600 );
}

void loop() {//second of two required fuctions, this loops forever
  //first example----------------------------------------------------------------------------------------------
  first(); // this calls the fuction called first
  //first example----------------------------------------------------------------------------------------------

  //Second Example---------------------------------------------------------------------------------------------
  theRandom = second();// this set the global variable called 'theRandom' to the value returned by the fuction 'second()'  
  Serial.print("My random number is ");
  Serial.println(theRandom);//prints the retuned random value generated by the fuction;
  delay(1000);
  //Second Example---------------------------------------------------------------------------------------------

  //Third example---------------------------------------------------------------------------------------------
  //now I'm going to call a fuction and send it three values they happen to be strings
  //  const char* sleepyDogs = third('sleepy', 'many', 'puppies'); //values are sent with comma and a space between them
  //  Serial.println(sleepyDogs);//prints the retuned value of the newSentance variable;
  //  delay(2000);

  const char* test = "sdfsdfsdf";
  testfunc(test );

  //Third example---------------------------------------------------------------------------------------------

}

void first() { //this defines your first user defined fuction
  Serial.print("Hello ");
  Serial.println("Trevor");
  delay(2000);
  //this fuction returns nothing that is why it has a 'void' before the fuction name
}// this ends your first fuction

int second() {
  int theNumber; //defines a local variable who's value is only avalable inside this fuction
  theNumber = random(0, 10); //makes a random number between 0 and 9
  return theNumber; // the word 'return' sends a value back to the place that called the fuction.
}

//int third(const char* one, const char* two, const char* three) {
//  //the incoming values in the fuction call get assigned in the order they were sent in this case
//  // char one is now equal to "sleepy"
//  // char two is now equal to "many"
//  // char three is now equal to "puppies"
//  // now we are going to add the strings together, this is call concatination
//  char newSentence = two + " " + one + " " + three;
//  return three; // the word 'return' sends a value back to the place that called the fuction.
//}

const char* testfunc(const char* testvar) {

  Serial.println(testvar);
}

